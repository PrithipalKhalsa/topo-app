{"changed":true,"filter":false,"title":"utils.js","tooltip":"/topo-app/js/utils.js","value":"window.DrawingBoard = typeof DrawingBoard !== \"undefined\" ? DrawingBoard : {};\n\n\nDrawingBoard.Utils = {};\n\n/*!\n* Tim (lite)\n*   github.com/premasagar/tim\n*//*\n\tA tiny, secure JavaScript micro-templating script.\n*/\nDrawingBoard.Utils.tpl = (function(){\n\t\"use strict\";\n\n\tvar start   = \"{{\",\n\t\tend     = \"}}\",\n\t\tpath    = \"[a-z0-9_][\\\\.a-z0-9_]*\", // e.g. config.person.name\n\t\tpattern = new RegExp(start + \"\\\\s*(\"+ path +\")\\\\s*\" + end, \"gi\"),\n\t\tundef;\n\treturn function(template, data){\n\t\t// Merge data into the template string\n\t\treturn template.replace(pattern, function(tag, token){\n\t\t\tvar path = token.split(\".\"),\n\t\t\t\tlen = path.length,\n\t\t\t\tlookup = data,\n\t\t\t\ti = 0;\n\n\t\t\tfor (; i < len; i++){\n\t\t\t\tlookup = lookup[path[i]];\n\n\t\t\t\t// Property not found\n\t\t\t\tif (lookup === undef){\n\t\t\t\t\tthrow \"tim: '\" + path[i] + \"' not found in \" + tag;\n\t\t\t\t}\n\n\t\t\t\t// Return the required value\n\t\t\t\tif (i === len - 1){\n\t\t\t\t\treturn lookup;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n}());\n\n/**\n * https://github.com/jeromeetienne/microevent.js\n * MicroEvent - to make any js object an event emitter (server or browser)\n *\n * - pure javascript - server compatible, browser compatible\n * - dont rely on the browser doms\n * - super simple - you get it immediatly, no mistery, no magic involved\n *\n * - create a MicroEventDebug with goodies to debug\n *   - make it safer to use\n*/\nDrawingBoard.Utils.MicroEvent = function(){};\n\nDrawingBoard.Utils.MicroEvent.prototype = {\n\tbind : function(event, fct){\n\t\tthis._events = this._events || {};\n\t\tthis._events[event] = this._events[event]\t|| [];\n\t\tthis._events[event].push(fct);\n\t},\n\tunbind : function(event, fct){\n\t\tthis._events = this._events || {};\n\t\tif( event in this._events === false  )\treturn;\n\t\tthis._events[event].splice(this._events[event].indexOf(fct), 1);\n\t},\n\ttrigger : function(event /* , args... */){\n\t\tthis._events = this._events || {};\n\t\tif( event in this._events === false  )\treturn;\n\t\tfor(var i = 0; i < this._events[event].length; i++){\n\t\t\tthis._events[event][i].apply(this, Array.prototype.slice.call(arguments, 1));\n\t\t}\n\t}\n};\n\n//I know.\nDrawingBoard.Utils._boxBorderSize = function($el, withPadding, withMargin, direction) {\n\twithPadding = !!withPadding || true;\n\twithMargin = !!withMargin || false;\n\tvar width = 0,\n\t\tprops;\n\tif (direction == \"width\") {\n\t\tprops = ['border-left-width', 'border-right-width'];\n\t\tif (withPadding) props.push('padding-left', 'padding-right');\n\t\tif (withMargin) props.push('margin-left', 'margin-right');\n\t} else {\n\t\tprops = ['border-top-width', 'border-bottom-width'];\n\t\tif (withPadding) props.push('padding-top', 'padding-bottom');\n\t\tif (withMargin) props.push('margin-top', 'margin-bottom');\n\t}\n\tfor (var i = props.length - 1; i >= 0; i--)\n\t\twidth += parseInt($el.css(props[i]).replace('px', ''), 10);\n\treturn width;\n};\n\nDrawingBoard.Utils.boxBorderWidth = function($el, withPadding, withMargin) {\n\treturn DrawingBoard.Utils._boxBorderSize($el, withPadding, withMargin, 'width');\n};\n\nDrawingBoard.Utils.boxBorderHeight = function($el, withPadding, withMargin) {\n\treturn DrawingBoard.Utils._boxBorderSize($el, withPadding, withMargin, 'height');\n};\n\nDrawingBoard.Utils.isColor = function(string) {\n\tif (!string || !string.length) return false;\n\treturn (/(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i).test(string) || $.inArray(string.substring(0, 3), ['rgb', 'hsl']) !== -1;\n};\n\n/**\n * Packs an RGB color into a single integer.\n */\nDrawingBoard.Utils.RGBToInt = function(r, g, b) {\n\tvar c = 0;\n\tc |= (r & 255) << 16;\n\tc |= (g & 255) << 8;\n\tc |= (b & 255);\n\treturn c;\n};\n\n/**\n * Returns informations on the pixel located at (x,y).\n */\nDrawingBoard.Utils.pixelAt = function(image, x, y) {\n\tvar i = (y * image.width + x) * 4;\n\tvar c = DrawingBoard.Utils.RGBToInt(\n\t\timage.data[i],\n\t\timage.data[i + 1],\n\t\timage.data[i + 2]\n\t);\n\n\treturn [\n\t\ti, // INDEX\n\t\tx, // X\n\t\ty, // Y\n\t\tc  // COLOR\n\t];\n};\n\n/**\n * Compares two colors with the given tolerance (between 0 and 255).\n */\nDrawingBoard.Utils.compareColors = function(a, b, tolerance) {\n\tif (tolerance === 0) {\n\t\treturn (a === b);\n\t}\n\n\tvar ra = (a >> 16) & 255, rb = (b >> 16) & 255,\n\t\tga = (a >> 8) & 255, gb = (b >> 8) & 255,\n\t\tba = a & 255, bb = b & 255;\n\n\treturn (Math.abs(ra - rb) <= tolerance)\n\t\t&& (Math.abs(ga - gb) <= tolerance)\n\t\t&& (Math.abs(ba - bb) <= tolerance);\n};\n\n(function() {\n\tvar lastTime = 0;\n\tvar vendors = ['ms', 'moz', 'webkit', 'o'];\n\tfor(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n\t\twindow.requestAnimationFrame = window[vendors[x]+'RequestAnimationFrame'];\n\t\twindow.cancelAnimationFrame = window[vendors[x]+'CancelAnimationFrame'] || window[vendors[x]+'CancelRequestAnimationFrame'];\n\t}\n}());\n","undoManager":{"mark":-2,"position":2,"stack":[[{"start":{"row":19,"column":0},"end":{"row":20,"column":0},"action":"remove","lines":["",""],"id":2}],[{"start":{"row":19,"column":0},"end":{"row":19,"column":1},"action":"insert","lines":["d"],"id":3},{"start":{"row":19,"column":1},"end":{"row":19,"column":2},"action":"insert","lines":["r"]},{"start":{"row":19,"column":2},"end":{"row":19,"column":3},"action":"insert","lines":["a"]},{"start":{"row":19,"column":3},"end":{"row":19,"column":4},"action":"insert","lines":["w"]},{"start":{"row":19,"column":4},"end":{"row":19,"column":5},"action":"insert","lines":["i"]}],[{"start":{"row":19,"column":4},"end":{"row":19,"column":5},"action":"remove","lines":["i"],"id":4},{"start":{"row":19,"column":3},"end":{"row":19,"column":4},"action":"remove","lines":["w"]},{"start":{"row":19,"column":2},"end":{"row":19,"column":3},"action":"remove","lines":["a"]},{"start":{"row":19,"column":1},"end":{"row":19,"column":2},"action":"remove","lines":["r"]},{"start":{"row":19,"column":0},"end":{"row":19,"column":1},"action":"remove","lines":["d"]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":143,"column":0},"end":{"row":143,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1531856075451}